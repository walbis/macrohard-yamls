apiVersion: apps/v1
kind: Deployment
metadata:
  name: talep-takip
spec:
  replicas: 1
  selector:
    matchLabels:
      app: talep-takip
  template:
    metadata:
      labels:
        app: talep-takip
    spec:
      initContainers:
      - name: wait-for-db
        image: postgres:15
        command:
        - sh
        - -c
        - until pg_isready -h postgres -p 5432; do echo waiting for database; sleep 2; done;
        envFrom:
        - secretRef:
            name: talep-takip-secrets
        env:
        - name: PGHOST
          value: postgres
        - name: PGPORT
          value: "5432"
      - name: init-db
        image: tkkaray/talep-takip:v1
        command:
        - sh
        - -c
        - python manage.py migrate --noinput
        envFrom:
        - secretRef:
            name: talep-takip-secrets
        env:
        - name: POSTGRES_HOST
          value: postgres
        - name: DJANGO_DEBUG
          value: "True"
        - name: ALLOWED_HOSTS
          value: "*"
      containers:
      - name: talep-takip
        image: tkkaray/talep-takip:v1
        ports:
        - containerPort: 8000
        command:
        - gunicorn
        - config.wsgi:application
        - --bind
        - 0.0.0.0:8000
        envFrom:
        - secretRef:
            name: talep-takip-secrets
        env:
        - name: POSTGRES_HOST
          value: postgres
        - name: DJANGO_DEBUG
          value: "True"
        - name: ALLOWED_HOSTS
          value: "*"
        volumeMounts:
        - name: media-storage
          mountPath: /app/mediafiles
      volumes:
      - name: media-storage
        persistentVolumeClaim:
          claimName: talep-takip-media-pvc
